# This is a basic workflow to help you get started with Actions
name: CI-CD
# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    # Include pushes to tags
    tags:
      - 'v*'        # Match version tags like v1.0.0, v2.1.0, etc.
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      # FE BUILD
      - name: Install dependencies
        working-directory: ./fb-fe
        run: |
          npm install
          npm ci
      # build and test the apps
      - name: build
        working-directory: ./fb-fe
        run: |
          npm run build
#          npm run test
  push_to_Docker_Hub:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 22.x ]
    # build docker image and push to docker hub
    # only if the app build and test successfully
    needs: [build_test]
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      # FE BUILD
      - name: Install dependencies
        working-directory: ./fb-fe
        run: |
          npm install
          npm ci
      - name: build
        working-directory: ./fb-fe
        run: |
          npm run build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # Step 3: Set up Docker Buildx for building images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Extract the version from the Git tag or fallback to the commit SHA
      - name: Get the version
        id: get_version
        run: |
          # Try to get the latest tag, fallback to 0.0.0 if no tag found
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          # If on an untagged commit, append a commit hash to the version (optional)
          if [ "$TAG" = "v0.0.0" ]; then
            HASH=$(git rev-parse --short HEAD)
            VERSION="${TAG#v}-$HASH"
          else
            VERSION=${TAG#"v"}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version is $VERSION"

      - name: Build and push Docker image with SemVer
        uses: docker/build-push-action@v6
        with:
          context: ./fb-be
          file: ./fb-be/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/filebot-webui:${{ env.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/filebot-webui:latest

      - name: Run the image in a container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/filebot-webui:${{ env.VERSION }}
          run: |
            echo "Running the Docker image with version ${{ env.VERSION }}"
